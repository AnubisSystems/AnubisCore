# core/ports.py
from typing import List, Callable, Protocol

class IConversationPort(Protocol):
    async def preguntar_texto(self, prompt: str, on_response: Callable[[str], None]): ...
    async def preguntar_opciones(self, prompt: str, opciones: List[str], on_response: Callable[[str], None]): ...
    async def preguntar_imagen(self, prompt: str, on_response: Callable[[bytes], None]): ...
    async def mostrar_texto(self, texto: str): ...
    async def mostrar_resumen(self, titulo: str, datos: dict): ...
    async def mostrar_error(self, mensaje: str): ...

    async def obtener_imagen(self, image_id: str) -> str: ...
    async def obtener_imagen(self, image: bytes) -> str: ...


class IBotFlowPort(Protocol):
    async def start(self, conv: IConversationPort, context: dict):
        """Se ejecuta cuando el usuario envía /start"""
        ...

    async def help(self, conv: IConversationPort, context: dict):
        """Se ejecuta cuando el usuario envía /help"""
        ...